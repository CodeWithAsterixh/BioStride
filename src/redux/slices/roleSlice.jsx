import { createSlice } from '@reduxjs/toolkit'; // Import the createSlice utility from Redux Toolkit

// Define the initial state for managing roles
const initialState = {
  roles: [],        // Array to store the list of roles
  isLoading: false, // Boolean to indicate loading state for fetching roles
  error: null,      // Stores error messages if fetching roles fails
};

// Create a slice for role management with a name, initial state, and reducers
const roleSlice = createSlice({
  name: 'roles',    // Name of the slice, used in actions and state
  initialState,     // Initial state of the role slice
  reducers: {
    // Reducer for initiating the roles fetching process
    fetchRolesRequest(state) {
      state.isLoading = true; // Set loading state to true
    },

    // Reducer for handling successful roles fetching
    fetchRolesSuccess(state, action) {
      state.isLoading = false; // Set loading state to false
      state.roles = action.payload; // Update roles with data from the action payload
    },

    // Reducer for handling errors during roles fetching
    fetchRolesFailure(state, action) {
      state.isLoading = false; // Set loading state to false
      state.error = action.payload; // Update error message with data from the action payload
    },
  },
});

// Export the action creators generated by createSlice
export const { fetchRolesRequest, fetchRolesSuccess, fetchRolesFailure } = roleSlice.actions;

// Export the reducer function for this slice
export default roleSlice.reducer;
